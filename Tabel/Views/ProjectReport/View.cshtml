@model Tabel.ViewModels.ProjectReport.ProjectReportViewModel
@{
    ViewBag.Title = "Отчёт по проектам";
}

<h2>Отчёт по проектам</h2>



Введите даты за которые нужно построить отчёт


@using (Html.BeginForm("View", "ProjectReport", FormMethod.Get))
{
    <div>
        <table>
            <tr>
                <td>
                    Дата начала отчёта
                </td>
                <td>
                    @(Html.Kendo().DatePicker()
                        .Name("dateBegin")
                        .Value(DateTime.Now.AddDays(-15))
                    )
                </td>
            </tr>
            <tr></tr>
            <tr>
                <td>
                    Дата конца отчёта
                </td>
                <td>
                    @(Html.Kendo().DatePicker()
                          .Name("dateEnd")
                          .Value(DateTime.Now)
                          //.HtmlAttributes(new {style = "width:100%;"}
                          )
                </td>
            </tr>
            <tr>
                <td>
                    Проект:
                </td>
                <td>
                    @(Html.Kendo().ComboBox()
                          .Name("projectFilter")
                          .BindTo(Model.Projects)
                          .SelectedIndex(0)
                          .Suggest(true)
                    )
                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" name="command" value="Отобразить отчёт" class="k-primary k-button" />
                </td>
                <td>
                    <input type="submit" name="command" value="Загрузить Excel" class="k-primary k-button" />
                </td>
            </tr>
        </table>
    </div>
}

<br />

@(Html.Kendo().Grid(Model.Rows)
    .Name("testGrid")
    .Scrollable(gg => gg.Enabled(true))
    .Filterable()
    .HtmlAttributes(new { style = "height:" + (50 + Model.Rows.Count * 50) + "px;width:100%" })


    .Columns(columns =>
    {
        
        columns.Bound(r => r.WorkObject).Title("<b>Объект</b>").Width(120);
        columns.Bound(r => r.ProjectCode).Title("<b>Код проекта</b>").Width(120);
        columns.Bound(r => r.ProjectName).Title("<b>Название проекта</b>").Width(150);
        columns.Bound(r => r.Name).Title("<b>Инженер</b>").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(100);


        for (int i = 0; i < Model.MyColumns.Count; i++)
        {
            var index = i;
            //columns.Template(@<text>@item.Hours[index].ToString("c")</text>).Title("<span class='verticalText'>"+ Model.MyColumns[i]+ "</span>");
            columns.Template(@<text>@item.Hours[index].ToString()</text>).Title("<span class='verticalText'><b>" + Model.MyColumns[i] + "</b></span>").Width(28);
        }


        columns.Bound(r => r.TotalHours).Title("<b>Всего <br /> часов</b>").Width(70);//.ClientFooterTemplate("Total Count: #=count#");
        columns.Bound(r => r.Money).Format("{0:C}").Title("<b>Деньги</b>").Width(100); ;//.ClientFooterTemplate("Total Count: #=count#");

    }))




<script>
    $(document).ready(function () {
        var table = document.getElementsByTagName('table')[2];

        var rowLength = table.rows.length;

        for (var i = 0; i < rowLength; i++) {
            var row = table.rows[i];
            for (var y = 0; y < 1; y++) {
                var cell = row.cells[y];
                if (cell.innerHTML.includes("Итого")) {
                    row.style = "font-weight: bold";
                }
            }

        }
    });
</script>